1.Create Table

a.Write a SQL statement to create a table named jobs including columns job_id,
 job_title, min_salary, max_salary and check whether the max_salary should  be greater than  8000.


mysql> Show databases;
+--------------------+
| Database           |
+--------------------+
| adnan              |
| d                  |
| field              |
| information_schema |
| job                |
| mysql              |
| performance_schema |
| sakila             |
| sys                |
| world              |
+--------------------+
10 rows in set (0.15 sec)

mysql> use adnan;
Database changed
mysql> Show tables;
+-----------------+
| Tables_in_adnan |
+-----------------+
| book            |
| jobs            |
| student         |
+-----------------+
3 rows in set (0.00 sec)

mysql> desc jobs;
+------------+-------------+------+-----+---------+----------------+
| Field      | Type        | Null | Key | Default | Extra          |
+------------+-------------+------+-----+---------+----------------+
| job_id     | int         | NO   | PRI | NULL    | auto_increment |
| job_title  | varchar(30) | YES  |     | NULL    |                |
| min_salary | int         | YES  |     | NULL    |                |
| max_salary | int         | YES  |     | NULL    |                |
+------------+-------------+------+-----+---------+----------------+
4 rows in set (0.11 sec)


mysql> select * from jobs;
+--------+--------------------+------------+------------+
| job_id | job_title          | min_salary | max_salary |
+--------+--------------------+------------+------------+
|      1 | Software Developer |      20000 |      40000 |
|      2 | Data Scientist     |      15000 |      30000 |
|      3 | Sales Manager      |      12000 |      28000 |
|      4 | Stock Manager      |       1000 |      35000 |
|      5 | Finance Manager    |       8000 |      25000 |
+--------+--------------------+------------+------------+
5 rows in set (0.00 sec)

mysql> select max(max_salary) from jobs;
+-----------------+
| max(max_salary) |
+-----------------+
|           40000 |
+-----------------+
1 row in set (0.22 sec)


b. Write a SQL statement to create a table named countries including columns country_id, 
country_name and region_id and make sure that no countries except Italy, India and China 
will be entered in the table.


mysql> Show databases;
+--------------------+
| Database           |
+--------------------+
| adnan              |
| d                  |
| field              |
| information_schema |
| job                |
| mysql              |
| performance_schema |
| sakila             |
| sys                |
| world              |
+--------------------+
10 rows in set (0.15 sec)

mysql> use adnan;
Database changed
mysql> Show tables;
+-----------------+
| Tables_in_adnan |
+-----------------+
| book            |
| countries       |
| jobs            |
| student         |
+-----------------+
4 rows in set (0.00 sec)

mysql> desc countries;
+--------------+-------------------------------+------+-----+---------+----------------+
| Field        | Type                          | Null | Key | Default | Extra          |
+--------------+-------------------------------+------+-----+---------+----------------+
| country_id   | int                           | NO   | PRI | NULL    | auto_increment |
| country_name | enum('India','China','Italy') | YES  |     | NULL    |                |
| region_id    | int                           | YES  |     | NULL    |                |
+--------------+-------------------------------+------+-----+---------+----------------+
3 rows in set (0.00 sec)


mysql> select * from countries;
+------------+--------------+-----------+
| country_id | country_name | region_id |
+------------+--------------+-----------+
|          1 | India        |         1 |
|          2 | China        |         2 |
|          3 | Italy        |          3 |
+------------+--------------+-----------+
3 rows in set (0.00 sec)

c.Write a SQL statement to create a table job_history including columns employee_id, start_date, end_date,
 job_id and department_id and make sure that, the employee_id column does not contain any duplicate value 
at the time of insertion  .

mysql> Show databases;
+--------------------+
| Database           |
+--------------------+
| adnan              |
| d                  |
| field              |
| information_schema |
| job                |
| mysql              |
| performance_schema |
| sakila             |
| sys                |
| world              |
+--------------------+
10 rows in set (0.00 sec)

mysql> use adnan;
Database changed

mysql> Show tables;
+-----------------+
| Tables_in_adnan |
+-----------------+
| book            |
| countries       |
| job_history     |
| jobs            |
| student         |
+-----------------+
5 rows in set (0.16 sec)

mysql> create table job_history(employee_id int primary key , start_date int, end_date int, job_id int, department_id int, unique (employee_id));
Query OK, 0 rows affected (1.20 sec)

mysql> desc job_history;
+---------------+------+------+-----+---------+-------+
| Field         | Type | Null | Key | Default | Extra |
+---------------+------+------+-----+---------+-------+
| employee_id   | int  | NO   | PRI | NULL    |       |
| start_date    | int  | YES  |     | NULL    |       |
| end_date      | int  | YES  |     | NULL    |       |
| job_id        | int  | YES  |     | NULL    |       |
| department_id | int  | YES  |     | NULL    |       |
+---------------+------+------+-----+---------+-------+
5 rows in set (0.09 sec)

mysql> create table job_history(employee_id int primary key , start_date int, end_date int, job_id int, department_id int, unique (employee_id));
ERROR 1050 (42S01): Table 'job_history' already exists



2.Alter Table

a.Write a SQL statement to add a foreign key constraint named fk_job_id on job_id column of 
job_history table referencing to the primary key job_id of jobs table.


mysql> alter table job_history add(fk_job_id int, foreign key (fk_job_id) references jobs(job_id));
Query OK, 0 rows affected (3.87 sec)
Records: 0  Duplicates: 0  Warnings: 0


mysql> desc job_history;
+---------------+------+------+-----+---------+-------+
| Field         | Type | Null | Key | Default | Extra |
+---------------+------+------+-----+---------+-------+
| employee_id   | int  | NO   | PRI | NULL    |       |
| start_date    | int  | YES  |     | NULL    |       |
| end_date      | int  | YES  |     | NULL    |       |
| job_id        | int  | YES  |     | NULL    |       |
| department_id | int  | YES  |     | NULL    |       |
| fk_job_id     | int  | YES  | MUL | NULL    |       |
+---------------+------+------+-----+---------+-------+
6 rows in set (0.28 sec)


b.Write a SQL statement to rename the table countries to country_new.

mysql> alter table countries rename to country_new;
Query OK, 0 rows affected (0.02 sec)

mysql> Show tables;
+-----------------+
| Tables_in_adnan |
+-----------------+
| book            |
| country_new     |
| job_history     |
| jobs            |
| student         |
+-----------------+
5 rows in set (0.03 sec)


c.Write a SQL statement to change the name of the column country_id to con_id, 
keeping the data type and size same.


mysql> alter table country_new change country_id to con_id ;
Query OK, 0 rows affected (0.05 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc country_new;
+--------------+-------------------------------+------+-----+---------+----------------+
| Field        | Type                          | Null | Key | Default | Extra          |
+--------------+-------------------------------+------+-----+---------+----------------+
| con_id   | int                           | NO   | PRI | NULL    | auto_increment |
| country_name | enum('India','China','Italy') | YES  |     | NULL    |                |
| region_id    | int                           | YES  |     | NULL    |                |
+--------------+-------------------------------+------+-----+---------+----------------+
3 rows in set (0.00 sec)



3.DML Statement

a.Write a SQL statement to insert a record with your own value into the table countries against each columns.

mysql>insert into country_new(con_id,country_name,region_id)values(1,'India',6);
Query OK, 1 row affected (0.00 sec)
mysql> select * from country_new;
| con_id | country_name | region_id |
+--------+-------------+-----------+
|      1 | India       |         6 |
+--------+-------------+-----------+
1 row in set (0.00 sec)

b.Write a SQL statement to insert 5 rows by a single insert statement into jobs table.

mysql> insert into jobs values(1,"Software Developer",20000 ,40000),(2,"Data Scientist",15000,30000),(3,"Sales Manager",12000,28000),(4,"Stock Manager ",10000,35000),(5,"Finance Manager",8000,25000);
Query OK, 5 rows affected (0.01 sec)
Records: 5  Duplicates: 0  Warnings: 0


mysql> select * from jobs;
+--------+--------------------+------------+------------+
| job_id | job_title          | min_salary | max_salary |
+--------+--------------------+------------+------------+
|      1 | Software Developer |      20000 |      40000 |
|      2 | Data Scientist     |      15000 |      30000 |
|      3 | Sales Manager      |      12000 |      28000 |
|      4 | Stock Manager      |       10000 |      35000 |
|      5 | Finance Manager    |       8000 |      25000 |
+--------+--------------------+------------+------------+
5 rows in set (0.16 sec)

Here is the sample table jobs.

JOB_ID     | JOB_TITLE                       | MIN_SALARY | MAX_SALARY |
+------------+---------------------------------+------------+------------+
| AD_PRES    | President                       |      20000 |      40000 |
| AD_VP      | Administration Vice President   |      15000 |      30000 |
| AD_ASST    | Administration Assistant        |       3000 |       6000 |
| FI_MGR     | Finance Manager                 |       8200 |      16000 |
| FI_ACCOUNT | Accountant                      |       4200 |       9000 |
| AC_MGR     | Accounting Manager              |       8200 |      16000 |
| AC_ACCOUNT | Public Accountant               |       4200 |       9000 |
| SA_MAN     | Sales Manager                   |      10000 |      20000 |
| SA_REP     | Sales Representative            |       6000 |      12000 |
| PU_MAN     | Purchasing Manager              |       8000 |      15000 |
| PU_CLERK   | Purchasing Clerk                |       2500 |       5500 |
| ST_MAN     | Stock Manager                   |       5500 |       8500 |
| ST_CLERK   | Stock Clerk                     |       2000 |       5000 |
| SH_CLERK   | Shipping Clerk                  |       2500 |       5500 |
| IT_PROG    | Programmer                      |       4000 |      10000 |
| MK_MAN     | Marketing Manager               |       9000 |      15000 |
| MK_REP     | Marketing Representative        |       4000 |       9000 |
| HR_REP     | Human Resources Representative  |       4000 |       9000 |
| PR_REP     | Public Relations Representative |       4500 |      10500 |
+------------+---------------------------------+-- 

c.Write a SQL statement to change Min_salary  to 8000 and max_Salary to 40000 for programmer.


mysql> update jobs set min_salary=8000 where job_title='Finance Manager';
Query OK, 0 rows affected (0.06 sec)
Rows matched: 1  Changed: 0  Warnings: 0

mysql> select * from jobs;
+--------+--------------------+------------+------------+
| job_id | job_title          | min_salary | max_salary |
+--------+--------------------+------------+------------+
|      1 | Software Developer |      20000 |      40000 |
|      2 | Data Scientist     |      15000 |      30000 |
|      3 | Sales Manager      |      12000 |      28000 |
|      4 | Stock Manager      |       1000 |      35000 |
|      5 | Finance Manager    |       8000 |      25000 |
+--------+--------------------+------------+------------+
5 rows in set (0.00 sec)

mysql> update jobs set max_salary=40000 where job_title='Finance Manager';
Query OK, 1 row affected (0.22 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select * from jobs;
+--------+--------------------+------------+------------+
| job_id | job_title          | min_salary | max_salary |
+--------+--------------------+------------+------------+
|      1 | Software Developer |      20000 |      40000 |
|      2 | Data Scientist     |      15000 |      30000 |
|      3 | Sales Manager      |      12000 |      28000 |
|      4 | Stock Manager      |       1000 |      35000 |
|      5 | Finance Manager    |       8000 |      40000 |
+--------+--------------------+------------+------------+
5 rows in set (0.00 sec)